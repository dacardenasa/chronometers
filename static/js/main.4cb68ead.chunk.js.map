{"version":3,"sources":["components/Header.js","components/AddChronometerButton.js","components/Views.js","chronometers.js","components/Chronometer.js","App.js","index.js"],"names":["headerStyles","textAlign","borderBottom","paddingBottom","marginBottom","borderColor","color","borderRadius","backgroundColor","Header","style","AddChronometerButton","props","className","disabled","enable","onClick","handleClick","fontSize","ChronometerMainView","title","project","time","deleteChronometer","DeleteForeverOutlined","grey","editChronometer","EditOutlined","play","chronometerStatus","ChronometerCreateView","onSubmit","save","htmlFor","type","error","ref","cancel","ChronometerUpdateView","update","onChange","changeTitle","refTitle","value","changeProject","refProject","easyTimer","require","Timer","chronometers","id","timer","fill","edit","Chronometer","titleRef","React","createRef","projectRef","state","e","preventDefault","newChronometer","this","length","setState","concat","timerId","current","map","chronometer","filter","window","confirm","find","stop","start","callback","chronometerTime","getTimeValues","toString","pause","target","some","enableAddButton","enableAddChronometerButton","enableEditButton","enableEditChronometerButton","Container","maxWidth","key","stopChronometer","startChronometer","handleChangeTitle","handleChangeProject","updateChronometer","cancelUpdate","saveChronometer","cancelChronometer","createChronometer","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4cb68ead.chunk.js","sourcesContent":["import React from 'react';\n\nconst headerStyles = {\n  textAlign: 'center',\n  borderBottom: '1px solid #ccc',\n  paddingBottom: '10px',\n  marginBottom: '30px',\n  borderColor: '#000',\n  color: '#000',\n  borderRadius: '0 0 15px 15px',\n  backgroundColor: 'white',\n}\n\nexport const Header = () => { return <h1 style={ headerStyles }>Chronometers App</h1> };\n","import React from 'react';\nimport AddIcon from '@material-ui/icons/Add';\n\nexport const AddChronometerButton = (props) => {\n  return(\n    <div className=\"add-button-box\">\n      <button className=\"add-button\" disabled={props.enable ? true : false} onClick={props.handleClick}>\n        <AddIcon fontSize=\"large\" />\n      </button>\n    </div>\n  );\n};","import React from 'react';\nimport { grey } from \"@material-ui/core/colors\";\nimport { DeleteForeverOutlined, EditOutlined } from \"@material-ui/icons\";\n\nexport const ChronometerMainView = (props) => {\n  return (\n    <div className=\"chronometer-box\">\n      <div className=\"summary-box\">\n        <h3>{props.title}</h3>\n        <span>{props.project}</span>\n      </div>\n      <div className=\"time-box\">\n        <span>{props.time}</span>\n      </div>\n      <div className=\"actions-box\">\n        <button onClick={props.deleteChronometer}>\n          <DeleteForeverOutlined style={{ color: grey[900] }} />\n        </button>\n        <button onClick={props.editChronometer} disabled={props.enable ? true : false}>\n          <EditOutlined style={{ color: grey[900] }} />\n        </button>\n      </div>\n      {props.play ? \n        <button className=\"stop-button\" onClick={props.chronometerStatus}>Stop</button> : \n        <button className=\"start-button\" onClick={props.chronometerStatus}>Start</button>\n      }\n    </div>\n  );\n};\n\nexport const ChronometerCreateView = (props) => {\n  return (\n    <div className=\"chronometer-box\">\n      <form onSubmit={props.save}>\n        <div className=\"title-box\">\n          <label htmlFor=\"title\" className=\"label-title\">\n            Title\n          </label>\n          <br />\n          <input type=\"text\" className={props.error ? \"error\" : null} ref={props.title}/>\n        </div>\n        <div className=\"project-box\">\n          <label htmlFor=\"project\" className=\"label-title\">\n            Project\n          </label>\n          <br />\n          <input type=\"text\" className={props.error ? \"error\" : null} ref={props.project}/>\n        </div>\n        <div className=\"buttons-box\">\n          <button type=\"submit\" className=\"button-one\">Create</button>\n          <button className=\"button-two\" onClick={props.cancel}>Cancel</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport const ChronometerUpdateView = (props) => {\n  return (\n    <div className=\"chronometer-box\">\n      <form onSubmit={props.update}>\n        <div className=\"title-box\">\n          <label htmlFor=\"title\" className=\"label-title\">\n            Title\n          </label>\n          <br />\n          <input type=\"text\" className={props.error ? \"error\" : null} onChange={props.changeTitle} ref={props.refTitle} value={props.title} />\n        </div>\n        <div className=\"project-box\">\n          <label htmlFor=\"project\" className=\"label-title\">\n            Project\n          </label>\n          <br />\n          <input type=\"text\" className={props.error ? \"error\" : null} onChange={props.changeProject} ref={props.refProject} value={props.project} />\n        </div>\n        <div className=\"buttons-box\">\n          <button type=\"submit\" className=\"button-one\">Update</button>\n          <button className=\"button-two\" onClick={props.cancel}>Cancel</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n","const easyTimer = require('easytimer.js').Timer;\n\nconst chronometers = [\n  {\n    id: 1,\n    title: \"help students\",\n    project: \"Make it Real\",\n    timer: new easyTimer(),\n    time: \"00:00:00\",\n    play: false,\n    fill: true,\n    edit: false,\n    error: false,\n  },\n  {\n    id: 2,\n    title: \"Make Homework\",\n    project: \"High School\",\n    timer: new easyTimer(),\n    time: \"00:00:00\",\n    play: false,\n    fill: true,\n    edit: false,\n    error: false,\n  },\n  {\n    id: 3,\n    title: \"Build Landing Page\",\n    project: \"Make it Real\",\n    timer: new easyTimer(),\n    time: \"00:00:00\",\n    play: false,\n    fill: true,\n    edit: false,\n    error: false,\n  },\n]\n\nexport default chronometers;","import React, { Component } from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport { AddChronometerButton } from './AddChronometerButton';\nimport { ChronometerMainView, ChronometerCreateView, ChronometerUpdateView } from './Views';\nimport chronometers from '../chronometers'; \nconst easyTimer = require('easytimer.js').Timer;\n\nexport class Chronometer extends Component {\n  constructor() {\n    super();\n    this.titleRef = React.createRef();\n    this.projectRef = React.createRef();\n    this.title = '';\n    this.project = '';\n    this.state = {\n      chronometers: chronometers\n    };\n  }\n\n  createChronometer(e) {\n    e.preventDefault();\n    const chronometerid = this.state.chronometers.length + 1;\n    const newChronometer = {\n      id: chronometerid,\n      title: \"\",\n      project: \"\",\n      timer: new easyTimer(),\n      time: \"00:00:00\",\n      play: false,\n      fill: false,\n      edit: false,\n      error: false\n    }\n    this.setState({\n      chronometers: this.state.chronometers.concat(newChronometer)\n    });\n  }\n\n  saveChronometer(e, timerId) {\n    e.preventDefault();\n    let title = this.titleRef.current.value;\n    let project = this.projectRef.current.value;\n\n    if (title.length === 0 || project.length === 0) {\n      this.setState({\n        chronometers: this.state.chronometers.map(chronometer => {\n          if(chronometer.id === timerId){\n            chronometer.error = true;\n            return chronometer;\n          } else {\n            return chronometer;\n          }\n        })\n      });\n    } else {\n      this.setState({\n        chronometers: this.state.chronometers.map( chronometer => {\n          if (chronometer.id === timerId) {\n            chronometer.title = title;\n            chronometer.project = project;\n            chronometer.fill = true;\n            chronometer.error = false;\n            return chronometer;\n          } else {\n            return chronometer;\n          }\n        })\n      });\n    }\n  }\n\n  cancelChronometer(e, timerId) {\n    e.preventDefault();\n    this.setState({\n      chronometers: this.state.chronometers.filter( chronometer =>\n        chronometer.id !== timerId\n      )\n    });\n  }\n\n  editChronometer(e, timerId) {\n    e.preventDefault();\n    this.setState({\n      chronometer: this.state.chronometers.map( chronometer => {\n        if(chronometer.id === timerId) {\n          this.title = chronometer.title;\n          this.project = chronometer.project;\n          chronometer.edit = true;\n          return chronometer;\n        } else {\n          return chronometer;\n        }\n      })\n    });\n  }\n\n  updateChronometer(e, timerId) {\n    e.preventDefault();\n    let title = this.titleRef.current.value;\n    let project = this.projectRef.current.value;\n\n    if (title.length === 0 || project.length === 0) {\n      this.setState({\n        chronometers: this.state.chronometers.map(chronometer => {\n          if(chronometer.id === timerId){\n            chronometer.error = true;\n            return chronometer;\n          } else {\n            return chronometer;\n          }\n        })\n      });\n    } else { \n      this.setState({\n        chronometers: this.state.chronometers.map( chronometer => {\n          if (chronometer.id === timerId) {\n            chronometer.title = this.titleRef.current.value;\n            chronometer.project = this.projectRef.current.value;\n            chronometer.edit = false;\n            chronometer.error = false;\n            return chronometer;\n          } else {\n            return chronometer;\n          }\n        })\n      });\n    }\n  }\n\n  cancelUpdate(e, timerId) {\n    e.preventDefault();\n    this.setState({\n      chronometer: this.state.chronometers.map( chronometer => {\n        if(chronometer.id === timerId) {\n          chronometer.title = this.title;\n          chronometer.project = this.project;\n          chronometer.edit = false;\n          return chronometer;\n        } else {\n          return chronometer;\n        }\n      })\n    });\n  }\n\n  deleteChronometer(e, timerId) {\n    e.preventDefault();\n    if (window.confirm(\"¿Realmente deseas eliminar este cronometro?\")) {\n      let chronometer = this.state.chronometers.find(chronometer => chronometer.id === timerId);\n      let timer = chronometer.timer;\n      timer.stop();\n      this.setState({\n        chronometers: this.state.chronometers.filter( chronometer => \n          chronometer.id !== timerId\n        )\n      });\n    }\n  }\n\n  startChronometer(e, timerId) {\n    e.preventDefault();\n    let chronometer = this.state.chronometers.find(chronometer => chronometer.id === timerId);\n    let timer = chronometer.timer;\n\n    timer.start({callback: (timer) => {\n      const chronometerTime = timer.getTimeValues().toString();\n        this.setState({\n          chronometers: this.state.chronometers.map( chronometer => {\n            if (chronometer.id === timerId ) {\n              chronometer.time = chronometerTime;\n              chronometer.play = true;\n              return chronometer;\n            } else {\n              return chronometer;\n            }\n          })\n        });\n    }});\n  }\n\n  stopChronometer(e, timerId) {\n    e.preventDefault();\n    let chronometer = this.state.chronometers.find(chronometer => chronometer.id === timerId);\n    let timer = chronometer.timer;\n\n    this.setState({\n      chronometers: this.state.chronometers.map( chronometer => {\n        if (chronometer.id === timerId) {\n          chronometer.play = false;\n          return chronometer;\n        } else {\n          return chronometer;\n        }\n      })\n    });\n    timer.pause();\n  }\n\n  handleChangeTitle(e, timerId) {\n    let title = e.target.value;\n    this.setState({\n      chronometers: this.state.chronometers.map( chronometer => {\n        if(chronometer.id === timerId){\n          chronometer.title = title;\n          return chronometer;\n        } else {\n          return chronometer;\n        }\n      })\n    });\n  }\n\n  handleChangeProject(e, timerId) {\n    let project = e.target.value;\n    this.setState({\n      chronometers: this.state.chronometers.map( chronometer => {\n        if(chronometer.id === timerId){\n          chronometer.project = project;\n          return chronometer;\n        } else {\n          return chronometer;\n        }\n      })\n    });\n  }\n\n  enableAddChronometerButton(){\n    return this.state.chronometers.some(chronometer => chronometer.fill === false);\n  }\n\n  enableEditChronometerButton(){\n    return this.state.chronometers.some(chronometer => chronometer.edit === true);\n  }\n\n  render() {\n    let enableAddButton = this.enableAddChronometerButton();\n    let enableEditButton = this.enableEditChronometerButton();\n    return (\n    <Container maxWidth=\"sm\">\n      {\n        this.state.chronometers.map( (chronometer) => {\n          return( \n          chronometer.fill && !chronometer.edit ?\n            <ChronometerMainView \n            key={chronometer.id} \n            title={chronometer.title} \n            project={chronometer.project} \n            time={chronometer.time}\n            enable={enableEditButton}\n            play={chronometer.play}\n            editChronometer={(e) => this.editChronometer(e, chronometer.id)}\n            deleteChronometer={(e) => this.deleteChronometer(e, chronometer.id)}\n            chronometerStatus={ chronometer.play ? \n              (e) => this.stopChronometer(e, chronometer.id) : \n              (e) => this.startChronometer(e, chronometer.id) } \n            /> \n          : !chronometer.fill ?\n            <ChronometerCreateView \n            key={chronometer.id}\n            title={this.titleRef}\n            project={this.projectRef}\n            error={chronometer.error}\n            save={(e) => this.saveChronometer(e, chronometer.id)}\n            cancel={(e) => this.cancelChronometer(e, chronometer.id)} \n            />\n          : chronometer.edit ?\n            <ChronometerUpdateView \n            key={chronometer.id}\n            title={chronometer.title}\n            project={chronometer.project}\n            error={chronometer.error}\n            refTitle={this.titleRef}\n            refProject={this.projectRef}\n            changeTitle={(e) => this.handleChangeTitle(e, chronometer.id)}\n            changeProject={(e) => this.handleChangeProject(e, chronometer.id)}\n            update={(e) => this.updateChronometer(e, chronometer.id)}\n            cancel={(e) => this.cancelUpdate(e, chronometer.id) }\n            />\n          : null\n          )\n        })\n      }\n      <AddChronometerButton\n      enable={enableAddButton}\n      handleClick={(e) => this.createChronometer(e)}\n      />\n    </Container>\n    )\n  }\n}\n\n\n","import React from 'react';\nimport { Header } from './components/Header';\nimport { Chronometer } from './components/Chronometer';\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Chronometer />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}